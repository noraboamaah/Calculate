{"ast":null,"code":"import _slicedToArray from \"/Users/nora/Desktop/Documents/mpharma/calculate/Calculate/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nora/Desktop/Documents/mpharma/calculate/Calculate/src/Calculator.js\";\nimport React, { useState } from 'react';\nimport TextArea from './TextArea';\nimport CalcualtorButtons from './CalcualtorButtons';\n\nconst Calculator = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        result = _useState2[0],\n        setResult = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        equalsPressed = _useState4[0],\n        setEqualsPressed = _useState4[1];\n\n  const buttonClicked = buttonValue => {\n    switch (buttonValue) {\n      case '=':\n        Calculate();\n        setEqualsPressed(true);\n        break;\n\n      case 'DEL':\n        setResult('');\n        break;\n\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        setResult(result + buttonValue);\n        setEqualsPressed(false);\n        break;\n\n      default:\n        if (equalsPressed) {\n          setResult('');\n          setEqualsPressed(false);\n          setResult(result + buttonValue);\n          return;\n        }\n\n        setResult(result + buttonValue);\n    }\n  };\n\n  const Calculate = () => {\n    setResult(eval(result));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    result: result,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(CalcualtorButtons, {\n    buttonClicked: buttonClicked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/nora/Desktop/Documents/mpharma/calculate/Calculate/src/Calculator.js"],"names":["React","useState","TextArea","CalcualtorButtons","Calculator","result","setResult","equalsPressed","setEqualsPressed","buttonClicked","buttonValue","Calculate","eval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACKH,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAChBI,MADgB;AAAA,QACRC,SADQ;;AAAA,qBAEmBL,QAAQ,CAAC,KAAD,CAF3B;AAAA;AAAA,QAEhBM,aAFgB;AAAA,QAEDC,gBAFC;;AAIvB,QAAMC,aAAa,GAAGC,WAAW,IAAI;AACnC,YAAQA,WAAR;AACE,WAAK,GAAL;AACEC,QAAAA,SAAS;AACTH,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AACF,WAAK,KAAL;AACEF,QAAAA,SAAS,CAAC,EAAD,CAAT;AACA;;AACF,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACEA,QAAAA,SAAS,CAACD,MAAM,GAAGK,WAAV,CAAT;AACAF,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;;AACF;AACE,YAAID,aAAJ,EAAmB;AACjBD,UAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAF,UAAAA,SAAS,CAACD,MAAM,GAAGK,WAAV,CAAT;AAEA;AACD;;AACDJ,QAAAA,SAAS,CAACD,MAAM,GAAGK,WAAV,CAAT;AAvBJ;AAyBD,GA1BD;;AA4BA,QAAMC,SAAS,GAAG,MAAM;AACtBL,IAAAA,SAAS,CAACM,IAAI,CAACP,MAAD,CAAL,CAAT;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,iBAAD;AAAmB,IAAA,aAAa,EAAEI,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA1CD;;AA4CA,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport TextArea from './TextArea';\nimport CalcualtorButtons from './CalcualtorButtons';\n\nconst Calculator = () => {\n  const [result, setResult] = useState('');\n  const [equalsPressed, setEqualsPressed] = useState(false);\n\n  const buttonClicked = buttonValue => {\n    switch (buttonValue) {\n      case '=':\n        Calculate();\n        setEqualsPressed(true);\n        break;\n      case 'DEL':\n        setResult('');\n        break;\n      case '/':\n      case '+':\n      case '-':\n      case '*':\n        setResult(result + buttonValue);\n        setEqualsPressed(false);\n        break;\n      default:\n        if (equalsPressed) {\n          setResult('');\n          setEqualsPressed(false);\n          setResult(result + buttonValue);\n\n          return;\n        }\n        setResult(result + buttonValue);\n    }\n  };\n\n  const Calculate = () => {\n    setResult(eval(result));\n  };\n\n  return (\n    <div className=\"calculator\">\n      <TextArea result={result} />\n      <CalcualtorButtons buttonClicked={buttonClicked} />\n    </div>\n  );\n};\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}